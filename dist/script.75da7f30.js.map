{"version":3,"sources":["script.js"],"names":["searchElement","document","querySelector","temperatureDescription","temperatureDegree","locationTimezone","iconLocation","temperatureSection","temperatureSpan","searchBox","google","maps","places","SearchBox","setWeatherData","data","place","timezone","split","replace","textContent","currently","summary","Math","floor","temperature","celsius","setIcon","Skycons","color","set","icon","play","addEventListener","addListener","getPlaces","lat","geometry","location","long","lng","fetch","then","resp","json","console","log","formatted_address","catch","err","error","fetchingData"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["// let GOOGLE_APIKEY = process.env.GOOGLE_APIKEY;\n// let DARK_SKY_APIKEY = process.env.DARK_SKY_APIKEY;\nconst searchElement = document.querySelector('[data-city-search]');\nconst temperatureDescription = document.querySelector('.temperature-description');\nconst temperatureDegree = document.querySelector('.temperature-degree');\nconst locationTimezone = document.querySelector('.location-timezone');\nconst iconLocation = document.querySelector('.icon');\nconst temperatureSection = document.querySelector('.degree-section');\nconst temperatureSpan = document.querySelector('.degree-section span');\nconst searchBox = new google.maps.places.SearchBox(searchElement);\n\nfunction setWeatherData(data, place = data.timezone.split('/')[1].replace (/_/g, \" \")) {\n  locationTimezone.textContent = place;\n  temperatureDescription.textContent = data.currently.summary;\n  temperatureDegree.textContent = Math.floor(data.currently.temperature);\n  let celsius = (data.currently.temperature - 32) * (5 / 9);\n  temperatureSpan.textContent = 'F';\n  //Set Icon\n  setIcon = new Skycons({color: 'whitesmoke'});\n  setIcon.set(iconLocation, data.currently.icon);\n  setIcon.play();\n  \n  temperatureSection.addEventListener('click', () => {\n    if(temperatureSpan.textContent === \"F\") {\n      temperatureSpan.textContent = \"C\"\n      temperatureDegree.textContent = Math.floor(celsius);\n    } else {\n      temperatureSpan.textContent = \"F\";\n      temperatureDegree.textContent = Math.floor(data.currently.temperature);\n    }\n  })\n}\n\n  \n\nsearchBox.addListener('places_changed', () => {\n  const place = searchBox.getPlaces()[0];\n  if (place == null) return\n  const lat = place.geometry.location.lat();\n  const long = place.geometry.location.lng();\n \n  fetch(`https://dark-sky.p.rapidapi.com/${lat},${long}?lang=en&units=auto`, {\n    \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"dark-sky.p.rapidapi.com\",\n            \"x-rapidapi-key\": 'ec5a0bdab9msh9473d016b97e789p1b1b26jsn4dd63aa6c2cd'\n          }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n          console.log(data);\n          setWeatherData(data, place.formatted_address.split(',')[0]);\n        })\n        .catch(err => {\n          console.error(err);\n      })\n  })\n\n\n\n  \n  \n  // window.addEventListener('load', () => {\n  //   let long;\n  //   let lat;\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(position => {\n  //       long = position.coords.longitude;\n  //       lat = position.coords.latitude;\n\n  //       fetchingData(lat, long);\n\n\n        //   const proxy = 'https://cors-anywhere.herokuapp.com/';        \n      //   const api = `https://dark-sky.p.rapidapi.com/${lat},${long}?lang=en&units=auto` \n        \n      //   fetch(api, {\n      //     \"method\": \"GET\",\n      //     \"headers\": {\n      //       \"x-rapidapi-host\": \"dark-sky.p.rapidapi.com\",\n      //       \"x-rapidapi-key\": 'ec5a0bdab9msh9473d016b97e789p1b1b26jsn4dd63aa6c2cd'\n      //     }\n      //   })\n      //   .then(resp => resp.json())\n      //   .then(data => {\n      //     //Get Elements from API\n      //     // console.log(data);\n      //     const {temperature, summary, icon} = data.currently;\n      //     //Set DOM Elements from API\n      //     temperatureDegree.textContent = Math.floor(temperature);\n      //     temperatureDescription.textContent = summary;\n      //     locationTimezone.textContent = data.timezone;\n      //     // Formula for celsius\n      //     let celsius = (temperature - 32) * (5 / 9);\n      //     //Set Icon\n      //       setIcon = new Skycons({color: 'whitesmoke'});\n      //       setIcon.set(iconLocation, icon);\n      //       setIcon.play();\n\n      //     //Change temperature to Celsius/Fahrenheit\n      //     temperatureSection.addEventListener('click', () => {\n      //       if(temperatureSpan.textContent === \"F\") {\n      //         temperatureSpan.textContent = \"C\"\n      //         temperatureDegree.textContent = Math.floor(celsius);\n      //       } else {\n      //         temperatureSpan.textContent = \"F\";\n      //         temperatureDegree.textContent = Math.floor(temperature);\n      //       }\n      //     })\n      //     })\n      //     .catch(err => {\n      //         console.error(err);\n      //     });\n      // });\n\n\n  //   })\n  // }});\n  \n  \n  \n  function fetchingData(lat, long) {\n    return fetch(`https://dark-sky.p.rapidapi.com/${lat},${long}?lang=en&units=auto`, {\n    \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"dark-sky.p.rapidapi.com\",\n            \"x-rapidapi-key\": 'ec5a0bdab9msh9473d016b97e789p1b1b26jsn4dd63aa6c2cd'\n          }\n        })\n        .then(resp => resp.json())\n        .then(data => {\n          console.log(data);\n          setWeatherData(data);\n        })\n        .catch(err => {\n          console.error(err);\n      })\n  }\n  \n\n  \n  \n  // Load Animation\n  \n  // function loader(){\n  //     document.querySelector('.loader-container').classList.add('fade-out');\n  //   }\n    \n  //   function fadeOut(){\n  //     setInterval(loader, 1700);\n  //   }\n  //   window.onload = fadeOut"]}